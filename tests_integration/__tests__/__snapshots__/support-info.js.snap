// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API getSupportInfo() with version 0.0.0 -> 1.0.0 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`API getSupportInfo() with version 0.0.0 1`] = `
Object {
  "languages": Object {
    "Angular": Array [
      "angular",
    ],
    "CSS": Array [
      "css",
    ],
    "Flow": Array [
      "babel",
      "flow",
    ],
    "GraphQL": Array [
      "graphql",
    ],
    "HTML": Array [
      "html",
    ],
    "Handlebars": Array [
      "glimmer",
    ],
    "JSON": Array [
      "json",
    ],
    "JSON with Comments": Array [
      "json",
    ],
    "JSON.stringify": Array [
      "json-stringify",
    ],
    "JSON5": Array [
      "json5",
    ],
    "JSX": Array [
      "babel",
      "flow",
    ],
    "JavaScript": Array [
      "babel",
      "flow",
    ],
    "Less": Array [
      "less",
    ],
    "Lightning Web Components": Array [
      "lwc",
    ],
    "MDX": Array [
      "mdx",
    ],
    "Markdown": Array [
      "markdown",
    ],
    "PostCSS": Array [
      "css",
    ],
    "SCSS": Array [
      "scss",
    ],
    "TypeScript": Array [
      "typescript",
    ],
    "Vue": Array [
      "vue",
    ],
    "YAML": Array [
      "yaml",
    ],
  },
  "options": Object {
    "alignObjectProperties": Object {
      "default": false,
      "type": "boolean",
    },
    "alignTernaryLines": Object {
      "default": true,
      "type": "boolean",
    },
    "arrowParens": Object {
      "choices": Array [
        "avoid",
        "always",
      ],
      "default": "avoid",
      "type": "choice",
    },
    "bracketSpacing": Object {
      "default": true,
      "type": "boolean",
    },
    "cursorOffset": Object {
      "default": -1,
      "range": Object {
        "end": Infinity,
        "start": -1,
        "step": 1,
      },
      "type": "int",
    },
    "endOfLine": Object {
      "choices": Array [
        "auto",
        "lf",
        "crlf",
        "cr",
      ],
      "default": "auto",
      "type": "choice",
    },
    "filepath": Object {
      "default": undefined,
      "type": "path",
    },
    "generatorStarSpacing": Object {
      "default": false,
      "type": "boolean",
    },
    "htmlWhitespaceSensitivity": Object {
      "choices": Array [
        "css",
        "strict",
        "ignore",
      ],
      "default": "css",
      "type": "choice",
    },
    "indentChains": Object {
      "default": true,
      "type": "boolean",
    },
    "insertPragma": Object {
      "default": false,
      "type": "boolean",
    },
    "jsxBracketSameLine": Object {
      "default": false,
      "type": "boolean",
    },
    "jsxSingleQuote": Object {
      "default": false,
      "type": "boolean",
    },
    "parenSpacing": Object {
      "default": false,
      "type": "boolean",
    },
    "parser": Object {
      "choices": Array [
        "flow",
        "babel",
        "babel-flow",
        "typescript",
        "css",
        "less",
        "scss",
        "json",
        "json5",
        "json-stringify",
        "graphql",
        "markdown",
        "mdx",
        "vue",
        "yaml",
        "glimmer",
        "html",
        "angular",
        "lwc",
      ],
      "default": undefined,
      "type": "choice",
    },
    "pluginSearchDirs": Object {
      "default": Array [],
      "type": "path",
    },
    "plugins": Object {
      "default": Array [],
      "type": "path",
    },
    "printWidth": Object {
      "default": 80,
      "range": Object {
        "end": Infinity,
        "start": 0,
        "step": 1,
      },
      "type": "int",
    },
    "proseWrap": Object {
      "choices": Array [
        "always",
        "never",
        "preserve",
      ],
      "default": "preserve",
      "type": "choice",
    },
    "quoteProps": Object {
      "choices": Array [
        "as-needed",
        "consistent",
        "preserve",
      ],
      "default": "as-needed",
      "type": "choice",
    },
    "rangeEnd": Object {
      "default": Infinity,
      "range": Object {
        "end": Infinity,
        "start": 0,
        "step": 1,
      },
      "type": "int",
    },
    "rangeStart": Object {
      "default": 0,
      "range": Object {
        "end": Infinity,
        "start": 0,
        "step": 1,
      },
      "type": "int",
    },
    "requirePragma": Object {
      "default": false,
      "type": "boolean",
    },
    "semi": Object {
      "default": true,
      "type": "boolean",
    },
    "singleQuote": Object {
      "default": false,
      "type": "boolean",
    },
    "spaceBeforeFunctionParen": Object {
      "default": false,
      "type": "boolean",
    },
    "tabWidth": Object {
      "default": 2,
      "range": Object {
        "end": Infinity,
        "start": 0,
        "step": 1,
      },
      "type": "int",
    },
    "trailingComma": Object {
      "choices": Array [
        "none",
        "es5",
        "all",
      ],
      "default": "none",
      "type": "choice",
    },
    "useTabs": Object {
      "default": false,
      "type": "boolean",
    },
    "yieldStarSpacing": Object {
      "default": false,
      "type": "boolean",
    },
  },
}
`;

exports[`API getSupportInfo() with version 1.0.0 -> 1.4.0 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`API getSupportInfo() with version 1.4.0 -> 1.5.0 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`API getSupportInfo() with version 1.5.0 -> 1.7.1 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`API getSupportInfo() with version 1.7.1 -> 1.8.0 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`API getSupportInfo() with version 1.8.0 -> 1.8.2 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`API getSupportInfo() with version 1.8.2 -> 1.16.0 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`API getSupportInfo() with version 1.16.0 -> undefined 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`CLI --support-info (stderr) 1`] = `""`;

exports[`CLI --support-info (stdout) 1`] = `
"{
  \\"languages\\": [
    {
      \\"aceMode\\": \\"javascript\\",
      \\"aliases\\": [\\"js\\", \\"node\\"],
      \\"codemirrorMimeType\\": \\"text/javascript\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"color\\": \\"#f1e05a\\",
      \\"extensions\\": [
        \\".js\\",
        \\"._js\\",
        \\".bones\\",
        \\".es\\",
        \\".es6\\",
        \\".frag\\",
        \\".gs\\",
        \\".jake\\",
        \\".jsb\\",
        \\".jscad\\",
        \\".jsfl\\",
        \\".jsm\\",
        \\".jss\\",
        \\".mjs\\",
        \\".njs\\",
        \\".pac\\",
        \\".sjs\\",
        \\".ssjs\\",
        \\".xsjs\\",
        \\".xsjslib\\"
      ],
      \\"filenames\\": [\\"Jakefile\\"],
      \\"interpreters\\": [\\"node\\", \\"nodejs\\"],
      \\"linguistLanguageId\\": 183,
      \\"name\\": \\"JavaScript\\",
      \\"parsers\\": [\\"babel\\", \\"flow\\"],
      \\"since\\": \\"0.0.0\\",
      \\"tmScope\\": \\"source.js\\",
      \\"type\\": \\"programming\\",
      \\"vscodeLanguageIds\\": [\\"javascript\\"]
    },
    {
      \\"aceMode\\": \\"javascript\\",
      \\"aliases\\": [],
      \\"codemirrorMimeType\\": \\"text/javascript\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"color\\": \\"#f1e05a\\",
      \\"extensions\\": [\\".js.flow\\"],
      \\"filenames\\": [],
      \\"interpreters\\": [\\"node\\"],
      \\"linguistLanguageId\\": 183,
      \\"name\\": \\"Flow\\",
      \\"parsers\\": [\\"babel\\", \\"flow\\"],
      \\"since\\": \\"0.0.0\\",
      \\"tmScope\\": \\"source.js\\",
      \\"type\\": \\"programming\\",
      \\"vscodeLanguageIds\\": [\\"javascript\\"]
    },
    {
      \\"aceMode\\": \\"javascript\\",
      \\"codemirrorMimeType\\": \\"text/jsx\\",
      \\"codemirrorMode\\": \\"jsx\\",
      \\"extensions\\": [\\".jsx\\"],
      \\"group\\": \\"JavaScript\\",
      \\"linguistLanguageId\\": 178,
      \\"name\\": \\"JSX\\",
      \\"parsers\\": [\\"babel\\", \\"flow\\"],
      \\"since\\": \\"0.0.0\\",
      \\"tmScope\\": \\"source.js.jsx\\",
      \\"type\\": \\"programming\\",
      \\"vscodeLanguageIds\\": [\\"javascriptreact\\"]
    },
    {
      \\"aceMode\\": \\"typescript\\",
      \\"aliases\\": [\\"ts\\"],
      \\"codemirrorMimeType\\": \\"application/typescript\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"color\\": \\"#2b7489\\",
      \\"extensions\\": [\\".ts\\", \\".tsx\\"],
      \\"linguistLanguageId\\": 378,
      \\"name\\": \\"TypeScript\\",
      \\"parsers\\": [\\"typescript\\"],
      \\"since\\": \\"1.4.0\\",
      \\"tmScope\\": \\"source.ts\\",
      \\"type\\": \\"programming\\",
      \\"vscodeLanguageIds\\": [\\"typescript\\", \\"typescriptreact\\"]
    },
    {
      \\"aceMode\\": \\"json\\",
      \\"codemirrorMimeType\\": \\"application/json\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"extensions\\": [],
      \\"filenames\\": [\\"package.json\\", \\"package-lock.json\\", \\"composer.json\\"],
      \\"group\\": \\"JavaScript\\",
      \\"linguistLanguageId\\": 174,
      \\"name\\": \\"JSON.stringify\\",
      \\"parsers\\": [\\"json-stringify\\"],
      \\"searchable\\": false,
      \\"since\\": \\"1.13.0\\",
      \\"tmScope\\": \\"source.json\\",
      \\"type\\": \\"data\\",
      \\"vscodeLanguageIds\\": [\\"json\\"]
    },
    {
      \\"aceMode\\": \\"json\\",
      \\"codemirrorMimeType\\": \\"application/json\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"extensions\\": [
        \\".json\\",
        \\".avsc\\",
        \\".geojson\\",
        \\".gltf\\",
        \\".JSON-tmLanguage\\",
        \\".jsonl\\",
        \\".tfstate\\",
        \\".tfstate.backup\\",
        \\".topojson\\",
        \\".webapp\\",
        \\".webmanifest\\"
      ],
      \\"filenames\\": [
        \\".arcconfig\\",
        \\".htmlhintrc\\",
        \\".tern-config\\",
        \\".tern-project\\",
        \\"composer.lock\\",
        \\"mcmod.info\\",
        \\".prettierrc\\"
      ],
      \\"group\\": \\"JavaScript\\",
      \\"linguistLanguageId\\": 174,
      \\"name\\": \\"JSON\\",
      \\"parsers\\": [\\"json\\"],
      \\"searchable\\": false,
      \\"since\\": \\"1.5.0\\",
      \\"tmScope\\": \\"source.json\\",
      \\"type\\": \\"data\\",
      \\"vscodeLanguageIds\\": [\\"json\\"]
    },
    {
      \\"aceMode\\": \\"javascript\\",
      \\"aliases\\": [\\"jsonc\\"],
      \\"codemirrorMimeType\\": \\"text/javascript\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"extensions\\": [
        \\".sublime-build\\",
        \\".sublime-commands\\",
        \\".sublime-completions\\",
        \\".sublime-keymap\\",
        \\".sublime-macro\\",
        \\".sublime-menu\\",
        \\".sublime-mousemap\\",
        \\".sublime-project\\",
        \\".sublime-settings\\",
        \\".sublime-theme\\",
        \\".sublime-workspace\\",
        \\".sublime_metrics\\",
        \\".sublime_session\\"
      ],
      \\"filenames\\": [
        \\".babelrc\\",
        \\".eslintrc.json\\",
        \\".jscsrc\\",
        \\".jshintrc\\",
        \\".jslintrc\\",
        \\"tsconfig.json\\",
        \\".eslintrc\\"
      ],
      \\"group\\": \\"JSON\\",
      \\"linguistLanguageId\\": 423,
      \\"name\\": \\"JSON with Comments\\",
      \\"parsers\\": [\\"json\\"],
      \\"since\\": \\"1.5.0\\",
      \\"tmScope\\": \\"source.js\\",
      \\"type\\": \\"data\\",
      \\"vscodeLanguageIds\\": [\\"jsonc\\"]
    },
    {
      \\"aceMode\\": \\"javascript\\",
      \\"codemirrorMimeType\\": \\"application/json\\",
      \\"codemirrorMode\\": \\"javascript\\",
      \\"extensions\\": [\\".json5\\"],
      \\"linguistLanguageId\\": 175,
      \\"name\\": \\"JSON5\\",
      \\"parsers\\": [\\"json5\\"],
      \\"since\\": \\"1.13.0\\",
      \\"tmScope\\": \\"source.js\\",
      \\"type\\": \\"data\\",
      \\"vscodeLanguageIds\\": [\\"json5\\"]
    },
    {
      \\"aceMode\\": \\"css\\",
      \\"codemirrorMimeType\\": \\"text/css\\",
      \\"codemirrorMode\\": \\"css\\",
      \\"color\\": \\"#563d7c\\",
      \\"extensions\\": [\\".css\\"],
      \\"linguistLanguageId\\": 50,
      \\"name\\": \\"CSS\\",
      \\"parsers\\": [\\"css\\"],
      \\"since\\": \\"1.4.0\\",
      \\"tmScope\\": \\"source.css\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"css\\"]
    },
    {
      \\"aceMode\\": \\"text\\",
      \\"extensions\\": [\\".pcss\\", \\".postcss\\"],
      \\"group\\": \\"CSS\\",
      \\"linguistLanguageId\\": 262764437,
      \\"name\\": \\"PostCSS\\",
      \\"parsers\\": [\\"css\\"],
      \\"since\\": \\"1.4.0\\",
      \\"tmScope\\": \\"source.postcss\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"postcss\\"]
    },
    {
      \\"aceMode\\": \\"less\\",
      \\"codemirrorMimeType\\": \\"text/css\\",
      \\"codemirrorMode\\": \\"css\\",
      \\"extensions\\": [\\".less\\"],
      \\"group\\": \\"CSS\\",
      \\"linguistLanguageId\\": 198,
      \\"name\\": \\"Less\\",
      \\"parsers\\": [\\"less\\"],
      \\"since\\": \\"1.4.0\\",
      \\"tmScope\\": \\"source.css.less\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"less\\"]
    },
    {
      \\"aceMode\\": \\"scss\\",
      \\"codemirrorMimeType\\": \\"text/x-scss\\",
      \\"codemirrorMode\\": \\"css\\",
      \\"extensions\\": [\\".scss\\"],
      \\"group\\": \\"CSS\\",
      \\"linguistLanguageId\\": 329,
      \\"name\\": \\"SCSS\\",
      \\"parsers\\": [\\"scss\\"],
      \\"since\\": \\"1.4.0\\",
      \\"tmScope\\": \\"source.scss\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"scss\\"]
    },
    {
      \\"aceMode\\": \\"handlebars\\",
      \\"aliases\\": [\\"hbs\\", \\"htmlbars\\"],
      \\"extensions\\": [\\".handlebars\\", \\".hbs\\"],
      \\"group\\": \\"HTML\\",
      \\"linguistLanguageId\\": 155,
      \\"name\\": \\"Handlebars\\",
      \\"parsers\\": [\\"glimmer\\"],
      \\"since\\": null,
      \\"tmScope\\": \\"text.html.handlebars\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"handlebars\\"]
    },
    {
      \\"aceMode\\": \\"text\\",
      \\"extensions\\": [\\".graphql\\", \\".gql\\"],
      \\"linguistLanguageId\\": 139,
      \\"name\\": \\"GraphQL\\",
      \\"parsers\\": [\\"graphql\\"],
      \\"since\\": \\"1.5.0\\",
      \\"tmScope\\": \\"source.graphql\\",
      \\"type\\": \\"data\\",
      \\"vscodeLanguageIds\\": [\\"graphql\\"]
    },
    {
      \\"aceMode\\": \\"markdown\\",
      \\"aliases\\": [\\"pandoc\\"],
      \\"codemirrorMimeType\\": \\"text/x-gfm\\",
      \\"codemirrorMode\\": \\"gfm\\",
      \\"extensions\\": [
        \\".md\\",
        \\".markdown\\",
        \\".mdown\\",
        \\".mdwn\\",
        \\".mkd\\",
        \\".mkdn\\",
        \\".mkdown\\",
        \\".ronn\\",
        \\".workbook\\"
      ],
      \\"filenames\\": [\\"README\\"],
      \\"linguistLanguageId\\": 222,
      \\"name\\": \\"Markdown\\",
      \\"parsers\\": [\\"markdown\\"],
      \\"since\\": \\"1.8.0\\",
      \\"tmScope\\": \\"source.gfm\\",
      \\"type\\": \\"prose\\",
      \\"vscodeLanguageIds\\": [\\"markdown\\"],
      \\"wrap\\": true
    },
    {
      \\"extensions\\": [\\".mdx\\"],
      \\"name\\": \\"MDX\\",
      \\"parsers\\": [\\"mdx\\"],
      \\"since\\": \\"1.15.0\\",
      \\"vscodeLanguageIds\\": [\\"mdx\\"]
    },
    {
      \\"aceMode\\": \\"html\\",
      \\"aliases\\": [\\"xhtml\\"],
      \\"codemirrorMimeType\\": \\"text/html\\",
      \\"codemirrorMode\\": \\"htmlmixed\\",
      \\"color\\": \\"#e34c26\\",
      \\"extensions\\": [\\".component.html\\"],
      \\"filenames\\": [],
      \\"linguistLanguageId\\": 146,
      \\"name\\": \\"Angular\\",
      \\"parsers\\": [\\"angular\\"],
      \\"since\\": \\"1.15.0\\",
      \\"tmScope\\": \\"text.html.basic\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"html\\"]
    },
    {
      \\"aceMode\\": \\"html\\",
      \\"aliases\\": [\\"xhtml\\"],
      \\"codemirrorMimeType\\": \\"text/html\\",
      \\"codemirrorMode\\": \\"htmlmixed\\",
      \\"color\\": \\"#e34c26\\",
      \\"extensions\\": [
        \\".html\\",
        \\".htm\\",
        \\".html.hl\\",
        \\".inc\\",
        \\".st\\",
        \\".xht\\",
        \\".xhtml\\",
        \\".mjml\\"
      ],
      \\"linguistLanguageId\\": 146,
      \\"name\\": \\"HTML\\",
      \\"parsers\\": [\\"html\\"],
      \\"since\\": \\"1.15.0\\",
      \\"tmScope\\": \\"text.html.basic\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"html\\"]
    },
    {
      \\"aceMode\\": \\"html\\",
      \\"aliases\\": [\\"xhtml\\"],
      \\"codemirrorMimeType\\": \\"text/html\\",
      \\"codemirrorMode\\": \\"htmlmixed\\",
      \\"color\\": \\"#e34c26\\",
      \\"extensions\\": [],
      \\"filenames\\": [],
      \\"linguistLanguageId\\": 146,
      \\"name\\": \\"Lightning Web Components\\",
      \\"parsers\\": [\\"lwc\\"],
      \\"since\\": \\"1.17.0\\",
      \\"tmScope\\": \\"text.html.basic\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"html\\"]
    },
    {
      \\"aceMode\\": \\"html\\",
      \\"color\\": \\"#2c3e50\\",
      \\"extensions\\": [\\".vue\\"],
      \\"linguistLanguageId\\": 391,
      \\"name\\": \\"Vue\\",
      \\"parsers\\": [\\"vue\\"],
      \\"since\\": \\"1.10.0\\",
      \\"tmScope\\": \\"text.html.vue\\",
      \\"type\\": \\"markup\\",
      \\"vscodeLanguageIds\\": [\\"vue\\"]
    },
    {
      \\"aceMode\\": \\"yaml\\",
      \\"aliases\\": [\\"yml\\"],
      \\"codemirrorMimeType\\": \\"text/x-yaml\\",
      \\"codemirrorMode\\": \\"yaml\\",
      \\"extensions\\": [
        \\".yml\\",
        \\".mir\\",
        \\".reek\\",
        \\".rviz\\",
        \\".sublime-syntax\\",
        \\".syntax\\",
        \\".yaml\\",
        \\".yaml-tmlanguage\\",
        \\".yml.mysql\\"
      ],
      \\"filenames\\": [\\".clang-format\\", \\".clang-tidy\\", \\".gemrc\\", \\"glide.lock\\"],
      \\"linguistLanguageId\\": 407,
      \\"name\\": \\"YAML\\",
      \\"parsers\\": [\\"yaml\\"],
      \\"since\\": \\"1.14.0\\",
      \\"tmScope\\": \\"source.yaml\\",
      \\"type\\": \\"data\\",
      \\"vscodeLanguageIds\\": [\\"yaml\\"]
    }
  ],
  \\"options\\": [
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": false,
      \\"description\\": \\"Align colons in multiline object literals.\\",
      \\"name\\": \\"alignObjectProperties\\",
      \\"pluginDefaults\\": {},
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": true,
      \\"description\\": \\"Align ternary lines.\\",
      \\"name\\": \\"alignTernaryLines\\",
      \\"oppositeDescription\\": \\"Do not align ternary lines.\\",
      \\"pluginDefaults\\": {},
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"choices\\": [
        {
          \\"description\\": \\"Omit parens when possible. Example: \`x => x\`\\",
          \\"value\\": \\"avoid\\"
        },
        {
          \\"description\\": \\"Always include parens. Example: \`(x) => x\`\\",
          \\"value\\": \\"always\\"
        }
      ],
      \\"default\\": \\"avoid\\",
      \\"description\\": \\"Include parentheses around a sole arrow function parameter.\\",
      \\"name\\": \\"arrowParens\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.9.0\\",
      \\"type\\": \\"choice\\"
    },
    {
      \\"category\\": \\"Common\\",
      \\"default\\": true,
      \\"description\\": \\"Print spaces between brackets.\\",
      \\"name\\": \\"bracketSpacing\\",
      \\"oppositeDescription\\": \\"Do not print spaces between brackets.\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"0.0.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"Special\\",
      \\"default\\": -1,
      \\"description\\": \\"Print (to stderr) where a cursor at the given position would move to after formatting.\\\\nThis option cannot be used with --range-start and --range-end.\\",
      \\"name\\": \\"cursorOffset\\",
      \\"pluginDefaults\\": {},
      \\"range\\": { \\"end\\": null, \\"start\\": -1, \\"step\\": 1 },
      \\"since\\": \\"1.4.0\\",
      \\"type\\": \\"int\\"
    },
    {
      \\"category\\": \\"Global\\",
      \\"choices\\": [
        {
          \\"description\\": \\"Maintain existing\\\\n(mixed values within one file are normalised by looking at what's used after the first line)\\",
          \\"value\\": \\"auto\\"
        },
        {
          \\"description\\": \\"Line Feed only (\\\\\\\\n), common on Linux and macOS as well as inside git repos\\",
          \\"value\\": \\"lf\\"
        },
        {
          \\"description\\": \\"Carriage Return + Line Feed characters (\\\\\\\\r\\\\\\\\n), common on Windows\\",
          \\"value\\": \\"crlf\\"
        },
        {
          \\"description\\": \\"Carriage Return character only (\\\\\\\\r), used very rarely\\",
          \\"value\\": \\"cr\\"
        }
      ],
      \\"default\\": \\"auto\\",
      \\"description\\": \\"Which end of line characters to apply.\\",
      \\"name\\": \\"endOfLine\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.15.0\\",
      \\"type\\": \\"choice\\"
    },
    {
      \\"category\\": \\"Special\\",
      \\"description\\": \\"Specify the input filepath. This will be used to do parser inference.\\",
      \\"name\\": \\"filepath\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.4.0\\",
      \\"type\\": \\"path\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": false,
      \\"description\\": \\"Add spaces around the star ('*') in generator functions (before and after - from eslint).\\",
      \\"name\\": \\"generatorStarSpacing\\",
      \\"pluginDefaults\\": {},
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"HTML\\",
      \\"choices\\": [
        {
          \\"description\\": \\"Respect the default value of CSS display property.\\",
          \\"value\\": \\"css\\"
        },
        {
          \\"description\\": \\"Whitespaces are considered sensitive.\\",
          \\"value\\": \\"strict\\"
        },
        {
          \\"description\\": \\"Whitespaces are considered insensitive.\\",
          \\"value\\": \\"ignore\\"
        }
      ],
      \\"default\\": \\"css\\",
      \\"description\\": \\"How to handle whitespaces in HTML.\\",
      \\"name\\": \\"htmlWhitespaceSensitivity\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.15.0\\",
      \\"type\\": \\"choice\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": true,
      \\"description\\": \\"Print indents at the start of chained calls.\\",
      \\"name\\": \\"indentChains\\",
      \\"oppositeDescription\\": \\"Do not print indents at the start of chained calls.\\",
      \\"pluginDefaults\\": {},
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"Special\\",
      \\"default\\": false,
      \\"description\\": \\"Insert @format pragma into file's first docblock comment.\\",
      \\"name\\": \\"insertPragma\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.8.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": false,
      \\"description\\": \\"Put > on the last line instead of at a new line.\\",
      \\"name\\": \\"jsxBracketSameLine\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"0.17.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": false,
      \\"description\\": \\"Use single quotes in JSX.\\",
      \\"name\\": \\"jsxSingleQuote\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.15.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"Common\\",
      \\"default\\": false,
      \\"description\\": \\"Print spaces between parens, WordPress style.\\",
      \\"name\\": \\"parenSpacing\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"0.0.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"Global\\",
      \\"choices\\": [
        { \\"description\\": \\"Flow\\", \\"value\\": \\"flow\\" },
        { \\"description\\": \\"JavaScript\\", \\"since\\": \\"1.16.0\\", \\"value\\": \\"babel\\" },
        { \\"description\\": \\"Flow\\", \\"since\\": \\"1.16.0\\", \\"value\\": \\"babel-flow\\" },
        {
          \\"description\\": \\"TypeScript\\",
          \\"since\\": \\"1.4.0\\",
          \\"value\\": \\"typescript\\"
        },
        { \\"description\\": \\"CSS\\", \\"since\\": \\"1.7.1\\", \\"value\\": \\"css\\" },
        { \\"description\\": \\"Less\\", \\"since\\": \\"1.7.1\\", \\"value\\": \\"less\\" },
        { \\"description\\": \\"SCSS\\", \\"since\\": \\"1.7.1\\", \\"value\\": \\"scss\\" },
        { \\"description\\": \\"JSON\\", \\"since\\": \\"1.5.0\\", \\"value\\": \\"json\\" },
        { \\"description\\": \\"JSON5\\", \\"since\\": \\"1.13.0\\", \\"value\\": \\"json5\\" },
        {
          \\"description\\": \\"JSON.stringify\\",
          \\"since\\": \\"1.13.0\\",
          \\"value\\": \\"json-stringify\\"
        },
        { \\"description\\": \\"GraphQL\\", \\"since\\": \\"1.5.0\\", \\"value\\": \\"graphql\\" },
        { \\"description\\": \\"Markdown\\", \\"since\\": \\"1.8.0\\", \\"value\\": \\"markdown\\" },
        { \\"description\\": \\"MDX\\", \\"since\\": \\"1.15.0\\", \\"value\\": \\"mdx\\" },
        { \\"description\\": \\"Vue\\", \\"since\\": \\"1.10.0\\", \\"value\\": \\"vue\\" },
        { \\"description\\": \\"YAML\\", \\"since\\": \\"1.14.0\\", \\"value\\": \\"yaml\\" },
        { \\"description\\": \\"Handlebars\\", \\"since\\": null, \\"value\\": \\"glimmer\\" },
        { \\"description\\": \\"HTML\\", \\"since\\": \\"1.15.0\\", \\"value\\": \\"html\\" },
        { \\"description\\": \\"Angular\\", \\"since\\": \\"1.15.0\\", \\"value\\": \\"angular\\" },
        {
          \\"description\\": \\"Lightning Web Components\\",
          \\"since\\": \\"1.17.0\\",
          \\"value\\": \\"lwc\\"
        }
      ],
      \\"description\\": \\"Which parser to use.\\",
      \\"name\\": \\"parser\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"0.0.10\\",
      \\"type\\": \\"choice\\"
    },
    {
      \\"array\\": true,
      \\"category\\": \\"Global\\",
      \\"default\\": [],
      \\"description\\": \\"Custom directory that contains prettier plugins in node_modules subdirectory.\\\\nOverrides default behavior when plugins are searched relatively to the location of Prettier.\\\\nMultiple values are accepted.\\",
      \\"name\\": \\"pluginSearchDirs\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.13.0\\",
      \\"type\\": \\"path\\"
    },
    {
      \\"array\\": true,
      \\"category\\": \\"Global\\",
      \\"default\\": [],
      \\"description\\": \\"Add a plugin. Multiple plugins can be passed as separate \`--plugin\`s.\\",
      \\"name\\": \\"plugins\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.10.0\\",
      \\"type\\": \\"path\\"
    },
    {
      \\"category\\": \\"Global\\",
      \\"default\\": 80,
      \\"description\\": \\"The line length where Prettier will try wrap.\\",
      \\"name\\": \\"printWidth\\",
      \\"pluginDefaults\\": {},
      \\"range\\": { \\"end\\": null, \\"start\\": 0, \\"step\\": 1 },
      \\"since\\": \\"0.0.0\\",
      \\"type\\": \\"int\\"
    },
    {
      \\"category\\": \\"Common\\",
      \\"choices\\": [
        {
          \\"description\\": \\"Wrap prose if it exceeds the print width.\\",
          \\"since\\": \\"1.9.0\\",
          \\"value\\": \\"always\\"
        },
        {
          \\"description\\": \\"Do not wrap prose.\\",
          \\"since\\": \\"1.9.0\\",
          \\"value\\": \\"never\\"
        },
        {
          \\"description\\": \\"Wrap prose as-is.\\",
          \\"since\\": \\"1.9.0\\",
          \\"value\\": \\"preserve\\"
        }
      ],
      \\"default\\": \\"preserve\\",
      \\"description\\": \\"How to wrap prose.\\",
      \\"name\\": \\"proseWrap\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.8.2\\",
      \\"type\\": \\"choice\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"choices\\": [
        {
          \\"description\\": \\"Only add quotes around object properties where required.\\",
          \\"value\\": \\"as-needed\\"
        },
        {
          \\"description\\": \\"If at least one property in an object requires quotes, quote all properties.\\",
          \\"value\\": \\"consistent\\"
        },
        {
          \\"description\\": \\"Respect the input use of quotes in object properties.\\",
          \\"value\\": \\"preserve\\"
        }
      ],
      \\"default\\": \\"as-needed\\",
      \\"description\\": \\"Change when properties in objects are quoted.\\",
      \\"name\\": \\"quoteProps\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.17.0\\",
      \\"type\\": \\"choice\\"
    },
    {
      \\"category\\": \\"Special\\",
      \\"default\\": null,
      \\"description\\": \\"Format code ending at a given character offset (exclusive).\\\\nThe range will extend forwards to the end of the selected statement.\\\\nThis option cannot be used with --cursor-offset.\\",
      \\"name\\": \\"rangeEnd\\",
      \\"pluginDefaults\\": {},
      \\"range\\": { \\"end\\": null, \\"start\\": 0, \\"step\\": 1 },
      \\"since\\": \\"1.4.0\\",
      \\"type\\": \\"int\\"
    },
    {
      \\"category\\": \\"Special\\",
      \\"default\\": 0,
      \\"description\\": \\"Format code starting at a given character offset.\\\\nThe range will extend backwards to the start of the first line containing the selected statement.\\\\nThis option cannot be used with --cursor-offset.\\",
      \\"name\\": \\"rangeStart\\",
      \\"pluginDefaults\\": {},
      \\"range\\": { \\"end\\": null, \\"start\\": 0, \\"step\\": 1 },
      \\"since\\": \\"1.4.0\\",
      \\"type\\": \\"int\\"
    },
    {
      \\"category\\": \\"Special\\",
      \\"default\\": false,
      \\"description\\": \\"Require either '@prettier' or '@format' to be present in the file's first docblock comment\\\\nin order for it to be formatted.\\",
      \\"name\\": \\"requirePragma\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.7.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": true,
      \\"description\\": \\"Print semicolons.\\",
      \\"name\\": \\"semi\\",
      \\"oppositeDescription\\": \\"Do not print semicolons, except at the beginning of lines which may need them.\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.0.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"Common\\",
      \\"default\\": false,
      \\"description\\": \\"Use single quotes instead of double quotes.\\",
      \\"name\\": \\"singleQuote\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"0.0.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": false,
      \\"description\\": \\"Put a space before function parenthesis.\\",
      \\"name\\": \\"spaceBeforeFunctionParen\\",
      \\"pluginDefaults\\": {},
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"Global\\",
      \\"default\\": 2,
      \\"description\\": \\"Number of spaces per indentation level.\\",
      \\"name\\": \\"tabWidth\\",
      \\"pluginDefaults\\": {},
      \\"range\\": { \\"end\\": null, \\"start\\": 0, \\"step\\": 1 },
      \\"type\\": \\"int\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"choices\\": [
        { \\"description\\": \\"No trailing commas.\\", \\"value\\": \\"none\\" },
        {
          \\"description\\": \\"Trailing commas where valid in ES5 (objects, arrays, etc.)\\",
          \\"value\\": \\"es5\\"
        },
        {
          \\"description\\": \\"Trailing commas wherever possible (including function arguments).\\",
          \\"value\\": \\"all\\"
        }
      ],
      \\"default\\": \\"none\\",
      \\"description\\": \\"Print trailing commas wherever possible when multi-line.\\",
      \\"name\\": \\"trailingComma\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"0.0.0\\",
      \\"type\\": \\"choice\\"
    },
    {
      \\"category\\": \\"Global\\",
      \\"default\\": false,
      \\"description\\": \\"Indent with tabs instead of spaces.\\",
      \\"name\\": \\"useTabs\\",
      \\"pluginDefaults\\": {},
      \\"since\\": \\"1.0.0\\",
      \\"type\\": \\"boolean\\"
    },
    {
      \\"category\\": \\"JavaScript\\",
      \\"default\\": false,
      \\"description\\": \\"Add spaces around the star ('*') in \`yield*\` expressions (before and after - from eslint).\\",
      \\"name\\": \\"yieldStarSpacing\\",
      \\"pluginDefaults\\": {},
      \\"type\\": \\"boolean\\"
    }
  ]
}

"
`;

exports[`CLI --support-info (write) 1`] = `Array []`;
